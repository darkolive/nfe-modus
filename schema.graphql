type Query {
  generateOTP(req: GenerateOTPRequestInput!): GenerateOTPResponse!
  verifyOTP(req: VerifyOTPRequestInput!): VerifyOTPResponse!
  userTimestamps(req: GetUserTimestampsInput!): UserTimestamps!
}

input GenerateOTPRequestInput {
  email: String!
}

type GenerateOTPResponse {
  success: Boolean!
  message: String!
}

input VerifyOTPRequestInput {
  email: String!
  otp: String!
}

type VerifyOTPResponse {
  success: Boolean!
  message: String!
  token: String
  user: User
}

type User {
  id: ID!
  email: String!
  dateJoined: Time!
  lastAuthTime: Time!
  status: String!
  verified: Boolean!
}

input GetUserTimestampsInput {
  email: String!
}

type UserTimestamps {
  dateJoined: Time!
  lastAuthTime: Time!
  daysSinceJoined: Int!
  lastSeenStatus: String!
  isActive: Boolean!
}

scalar Time